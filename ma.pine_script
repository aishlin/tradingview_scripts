// This Pine Script™ strategy is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © ChartPrime

//@version=6
strategy("Moving Average Shift Strategy [ChartPrime]", overlay=true)

// --------------------------------------------------------------------------------------------------------------------}
// 𝙐𝙎𝙀𝙍 𝙄𝙉𝙋𝙐𝙏𝙎
// --------------------------------------------------------------------------------------------------------------------}

type_ma = input.string("SMA", "Type", options=["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group="MA")
length = input.int(40, "Length", inline="ma", group="MA")
source = input.source(hl2, "", inline="ma", group="MA")
osclen = input.int(15, "Oscillator Length", group="Oscillator")
osc_threshold = input.float(0.5, "Oscillator Threshold", step=0.1, group="Oscillator")
osc_cross = input.bool(true, "Enable Crossover", group="Oscillator")

// Risk Management
stop_loss = input.float(1, "Stop Loss %", group="Risk Management") / 100
profit_target = input.float(1, "Take Profit %", group="Risk Management") / 100

// MA Calculation
ma(source, length, MAtype) =>
    switch MAtype
        "SMA" => ta.sma(source, length)
        "EMA" => ta.ema(source, length)
        "SMMA (RMA)" => ta.rma(source, length)
        "WMA" => ta.wma(source, length)
        "VWMA" => ta.vwma(source, length)

// Compute Moving Average
MA = ma(source, length, type_ma)

// Compute Oscillator
osc_diff = source - MA
perc_r = ta.percentile_linear_interpolation(osc_diff, 1000, 99)
osc = ta.hma(ta.change(osc_diff / perc_r, osclen), 10)

var float last_trade_direction = 1

// Entry Signals
//long_signal = ta.crossover(osc, osc[2]) and osc < -osc_threshold and source > MA
long_signal = source > MA and strategy.opentrades == 0 and last_trade_direction != 1
//short_signal = ta.crossunder(osc, osc[2]) and osc > osc_threshold and source < MA
short_signal = source < MA and strategy.opentrades == 0 and last_trade_direction != -1


// Execute Trades
if (long_signal)
    strategy.entry("Long", strategy.long)
    strategy.exit("Take Profit/Stop Loss", from_entry="Long", limit=close * (1 + profit_target), stop=close * (1 - stop_loss))
    last_trade_direction := 1

if (short_signal)
    strategy.entry("Short", strategy.short)
    strategy.exit("Take Profit/Stop Loss", from_entry="Short", limit=close * (1 - profit_target), stop=close * (1 + stop_loss))
    last_trade_direction := -1

// Plot Moving Average
plot(MA, "Moving Average", color=color.blue, linewidth=2)
